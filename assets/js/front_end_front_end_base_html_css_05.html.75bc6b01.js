"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3615],{6262:(i,s)=>{s.A=(i,s)=>{const t=i.__vccOpts||i;for(const[i,e]of s)t[i]=e;return t}},3568:(i,s,t)=>{t.r(s),t.d(s,{comp:()=>a,data:()=>d});var e=t(641);const l={},a=(0,t(6262).A)(l,[["render",function(i,s){return(0,e.uX)(),(0,e.CE)("div",null,s[0]||(s[0]=[(0,e.Fv)('<h1 id="_05-【css引入方式-css的元素显示模式】" tabindex="-1"><a class="header-anchor" href="#_05-【css引入方式-css的元素显示模式】"><span>05 【CSS引入方式 CSS的元素显示模式】</span></a></h1><h2 id="_1-css的引入方式" tabindex="-1"><a class="header-anchor" href="#_1-css的引入方式"><span>1.CSS的引入方式</span></a></h2><h3 id="_1-1-css的三种引入方式" tabindex="-1"><a class="header-anchor" href="#_1-1-css的三种引入方式"><span>1.1 CSS的三种引入方式</span></a></h3><p>按照 CSS 样式书写的位置（或者引入的方式），CSS 样式表可以分为三大类：</p><ul><li>行内样式表（行内式）</li><li>内部样式表（嵌入式）</li><li>外部样式表（外链式）</li></ul><h3 id="_1-2-行内样式表" tabindex="-1"><a class="header-anchor" href="#_1-2-行内样式表"><span>1.2 行内样式表</span></a></h3><p>行内样式表（内联样式表）是在元素标签内部的 style 属性中设定 CSS 样式，适合于修改简单样式。</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">color: red; font-size: 12px;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    青春不常在，抓紧谈恋爱</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>style</code> 其实就是标签的属性</li><li>在双引号中间，写法要符合 CSS 规范</li><li>可以控制当前的标签设置样式</li><li>由于书写繁琐，并且没有体现出结构与样式相分离的思想，所以不推荐大量使用，只有对当前元素添加简单样式的时候，可以考虑使用</li><li>使用行内样式表设定 CSS，通常也被称为 <code>行内式引入</code></li></ul><blockquote><p>问题：使用内联样式，样式只能对一个标签生效。如果希望影响到多个元素，必须在每一个元素中都复制一遍；并且当样式发生变化时，我们必须要一个一个的修改，非常的不方便。（注意：开发时绝对不要使用内联样式）</p></blockquote><h3 id="_1-3-内部样式表" tabindex="-1"><a class="header-anchor" href="#_1-3-内部样式表"><span>1.3 内部样式表</span></a></h3><p>将样式编写到<code>head</code>中的<code>style</code>标签里然后通过css的选择器来选中元素并为其设置各种样式可以同时为多个标签设置样式，并且修改时只需要修改一处即可。内部样式表更加方便对样式进行复用</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;text/css&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">red</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        font-size: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">12</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>&lt;style&gt;</code> 标签理论上可以放在 HTML 文档的任何地方，但一般会放到文档的 <code>&lt;head&gt;</code> 标签中</li><li>目前的浏览器已经支持<strong>省略</strong> <code>type</code> <strong>属性</strong></li><li>通过此种方式，可以方便控制当前整个页面中的元素样式设置</li><li>代码结构清晰，但是并没有实现结构与样式完全分离</li><li>使用内部样式表设定 CSS，通常也被称为 <code>嵌入式引入</code>，这种方式是我们练习时常用的方式</li></ul><blockquote><p>问题：我们的内部样式表只能对一个网页起作用，它里边的样式不能跨页面进行复用</p></blockquote><h3 id="_1-4-外部样式表" tabindex="-1"><a class="header-anchor" href="#_1-4-外部样式表"><span>1.4 外部样式表</span></a></h3><p>实际开发都是外部样式表，适合于样式比较多的情况，核心是：样式单独写到 CSS 文件中，之后把 CSS 文件引入到 HTML 页面中使用。</p><p>引入外部样式表分为两步：</p><ul><li>新建一个后缀名为：<code>.css</code> 的样式文件，把所有的 CSS 代码都放入此文件中</li><li>在 HTML 页面中，使用 <code>&lt;link&gt;</code> 标签引入这个文件</li></ul><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;stylesheet&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;text/css&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;css文件路径&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td><code>rel</code></td><td>定义当前文档与被链接文档之间的关系，在这里<strong>需要指定为 &quot;stylesheet&quot;</strong>，表示被链接的文档是一个样式表文件</td></tr><tr><td><code>type</code></td><td>定被链接文档的 MIME 类型，该属性最常见的 MIME 类型是 &quot;text/css&quot;，该类型描述样式表，目前的浏览器<strong>已经支持省略 &quot;type&quot; 属性</strong></td></tr><tr><td><code>href</code></td><td>定义所链接外部样式表文件的 URL，可以是相对路径，也可以是绝对路径</td></tr></tbody></table><p>**注意：**使用外部样式表设定 CSS，通常也被称为 <code>外链式</code> 或 <code>链接式引入</code>，这种方式是开发中常用的方式。</p><blockquote><p>外部样式表需要通过<code>link</code>标签进行引入，意味着只要想使用这些样式的网页都可以对其进行引用使样式，可以在不同页面之间进行复用</p><p>将样式编写到外部的CSS文件中，可以使用到浏览器的缓存机制，从而加快网页的加载速度，提高用户的体验。</p></blockquote><h3 id="_1-5-css引入方式总结" tabindex="-1"><a class="header-anchor" href="#_1-5-css引入方式总结"><span>1.5 CSS引入方式总结</span></a></h3><table><thead><tr><th>样式表</th><th>优点</th><th>缺点</th><th>使用情况</th><th>控制范围</th></tr></thead><tbody><tr><td>行内样式表（行内式）</td><td>书写方便，权重高</td><td>结构样式混写</td><td>较少</td><td>控制一个标签</td></tr><tr><td>内部样式表（嵌入式）</td><td>部分结构和样式分离</td><td>没有彻底分离</td><td>较多</td><td>控制一个页面</td></tr><tr><td>外部样式表（外链式）</td><td>完全实现结构和样式相分离</td><td>需要引入</td><td>最多</td><td>控制多个页面</td></tr></tbody></table><h2 id="_2-css-的元素显示模式" tabindex="-1"><a class="header-anchor" href="#_2-css-的元素显示模式"><span>2.CSS 的元素显示模式</span></a></h2><h3 id="_2-1-什么是元素显示模式" tabindex="-1"><a class="header-anchor" href="#_2-1-什么是元素显示模式"><span>2.1 什么是元素显示模式</span></a></h3><p>**作用：**网页的标签非常多，在不同地方会用到不同类型的标签，了解他们的特点可以更好的布局我们的网页。</p><p><code>元素显示模式</code> 就是元素（标签）以什么方式进行显示，比如 <code>&lt;div&gt;</code> 自己占一行，比如一行可以放多个 <code>&lt;span&gt;</code>。</p><p>HTML 元素一般分为 <code>块元素</code> 和 <code>行内元素</code> 两种类型。</p><h3 id="_2-2-块、行内、行内块" tabindex="-1"><a class="header-anchor" href="#_2-2-块、行内、行内块"><span>2.2 块、行内、行内块</span></a></h3><h4 id="_2-2-1-块元素" tabindex="-1"><a class="header-anchor" href="#_2-2-1-块元素"><span>2.2.1 块元素</span></a></h4><p>常见的块元素有 <code>&lt;h1&gt; ~ &lt;h6&gt;</code>、<code>&lt;p&gt;</code>、<code>&lt;div&gt;</code>、<code>&lt;ul&gt;</code>、<code>&lt;ol&gt;</code>、<code>&lt;li&gt;</code>、<code>&lt;dl&gt;</code>、<code>&lt;dt&gt;</code>、<code>&lt;dd&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;tr&gt;</code>、<code>&lt;form&gt;</code> 等，其中 <code>&lt;div&gt;</code> 标签是最典型的块元素。</p><p><strong>块级元素的特点：</strong></p><ul><li>比较霸道，自己独占一行</li><li>高度，宽度、外边距以及内边距都可以控制</li><li>宽度默认是容器（父级宽度）的 100%</li><li>是一个容器及盒子，里面可以放行内或者块级元素</li></ul><p><strong>注意：</strong></p><ul><li>文字类的块级元素内不能放置块级元素，会发生语法错误</li><li><code>&lt;p&gt;</code> 标签主要用于存放文字，因此 <code>&lt;p&gt;</code> 里面不能放块级元素，特别是不能放 <code>&lt;div&gt;</code></li><li>同理， <code>&lt;h1&gt; ~ &lt;h6&gt;</code> 等都是文字类块级标签，里面也不能放其他块级元素</li></ul><h4 id="_2-2-2-行内元素" tabindex="-1"><a class="header-anchor" href="#_2-2-2-行内元素"><span>2.2.2 行内元素</span></a></h4><p>常见的行内元素有 <code>&lt;a&gt;</code>、<code>&lt;span&gt;</code>、<code>&lt;em&gt;</code>、<code>&lt;strong&gt;</code> 等，其中 <code>&lt;span&gt;</code> 标签是最典型的行内元素，有的地方也将行内元素称为内联元素。</p><p><strong>行内元素的特点：</strong></p><ul><li><p>相邻行内元素在一行上，一行可以显示多个</p></li><li><p>高、宽直接设置是无效的</p></li><li><p>默认宽度就是它本身内容的宽度</p></li><li><p>行内元素只能容纳文本或其他行内元素（a 除外）</p></li></ul><p><strong>注意：</strong></p><ul><li>链接里面不能再放链接</li><li>特殊情况链接 <code>&lt;a&gt;</code> 里面可以放块级元素，但是给 <code>&lt;a&gt;</code> 转换一下块级模式最安全</li></ul><h4 id="_2-2-3-行内块元素" tabindex="-1"><a class="header-anchor" href="#_2-2-3-行内块元素"><span>2.2.3 行内块元素</span></a></h4><p>在行内元素中有几个特殊的标签：<code>&lt;img&gt;</code>、<code>&lt;input&gt;</code>、<code>&lt;th&gt;</code>、<code>&lt;td&gt;</code>，它们同时具有 <code>块元素</code> 和 <code>行内元素</code> 的特点，有些资料称它们为 <code>行内块元素</code>。</p><p><strong>行内块元素的特点：</strong></p><ul><li>和相邻行内元素（行内块）在一行上，但是他们之间会有空白缝隙。一行可以显示多个（行内元素特点）</li><li>默认宽度就是它本身内容的宽度（行内元素特点）</li><li>高度，行高、外边距以及内边距都可以控制（块级元素特点）</li></ul><h3 id="_2-3-元素显示模式转换" tabindex="-1"><a class="header-anchor" href="#_2-3-元素显示模式转换"><span>2.3 元素显示模式转换</span></a></h3><p>特殊情况下，我们需要元素模式的转换，简单理解: 一个模式的元素需要另外一种模式的特性 比如：想要增加链接 <code>&lt;a&gt;</code> 的触发范围。</p><ul><li>转换为块元素：<code>display: block;</code>（由于经常需要设置宽高，所以通常会将行内元素转换为块元素）</li><li>转换为行内元素：<code>display: inline;</code></li><li>转换为行内块：<code>display: inline-block;</code>（常用）</li></ul><h3 id="_2-4-元素显示模式总结" tabindex="-1"><a class="header-anchor" href="#_2-4-元素显示模式总结"><span>2.4 元素显示模式总结</span></a></h3><table><thead><tr><th>元素模式</th><th>元素排列</th><th>设置样式</th><th>默认宽度</th><th>包含</th></tr></thead><tbody><tr><td>块级元素</td><td>一行只能放一个块级元素</td><td>可以设置宽度和高度</td><td>容器的 100%</td><td>容量级可以包含任何标签</td></tr><tr><td>行内元素</td><td>一行可以放多个行内元素</td><td>不可以直接设置宽度和高度</td><td>它本身内容的宽度</td><td>容纳文本或其他行内元素</td></tr><tr><td>行内块元素</td><td>一行放多个行内块元素</td><td>可以设置宽度和高度</td><td>它本身内容的宽度</td><td></td></tr></tbody></table><p>学习元素显示模式的主要目的是分清它们各自的特点，当我们网页布局的时候，在合适的地方用合适的标签元素。</p>',53)]))}]]),d=JSON.parse('{"path":"/front_end/front_end_base/html_css/05.html","title":"05 【CSS引入方式 CSS的元素显示模式】","lang":"zh-CN","frontmatter":{"description":"05 【CSS引入方式 CSS的元素显示模式】 1.CSS的引入方式 1.1 CSS的三种引入方式 按照 CSS 样式书写的位置（或者引入的方式），CSS 样式表可以分为三大类： 行内样式表（行内式） 内部样式表（嵌入式） 外部样式表（外链式） 1.2 行内样式表 行内样式表（内联样式表）是在元素标签内部的 style 属性中设定 CSS 样式，适合于...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/newblog/front_end/front_end_base/html_css/05.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"05 【CSS引入方式 CSS的元素显示模式】"}],["meta",{"property":"og:description","content":"05 【CSS引入方式 CSS的元素显示模式】 1.CSS的引入方式 1.1 CSS的三种引入方式 按照 CSS 样式书写的位置（或者引入的方式），CSS 样式表可以分为三大类： 行内样式表（行内式） 内部样式表（嵌入式） 外部样式表（外链式） 1.2 行内样式表 行内样式表（内联样式表）是在元素标签内部的 style 属性中设定 CSS 样式，适合于..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-02T07:29:48.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-02T07:29:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"05 【CSS引入方式 CSS的元素显示模式】\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-02T07:29:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"1.CSS的引入方式","slug":"_1-css的引入方式","link":"#_1-css的引入方式","children":[{"level":3,"title":"1.1 CSS的三种引入方式","slug":"_1-1-css的三种引入方式","link":"#_1-1-css的三种引入方式","children":[]},{"level":3,"title":"1.2 行内样式表","slug":"_1-2-行内样式表","link":"#_1-2-行内样式表","children":[]},{"level":3,"title":"1.3 内部样式表","slug":"_1-3-内部样式表","link":"#_1-3-内部样式表","children":[]},{"level":3,"title":"1.4 外部样式表","slug":"_1-4-外部样式表","link":"#_1-4-外部样式表","children":[]},{"level":3,"title":"1.5 CSS引入方式总结","slug":"_1-5-css引入方式总结","link":"#_1-5-css引入方式总结","children":[]}]},{"level":2,"title":"2.CSS 的元素显示模式","slug":"_2-css-的元素显示模式","link":"#_2-css-的元素显示模式","children":[{"level":3,"title":"2.1 什么是元素显示模式","slug":"_2-1-什么是元素显示模式","link":"#_2-1-什么是元素显示模式","children":[]},{"level":3,"title":"2.2 块、行内、行内块","slug":"_2-2-块、行内、行内块","link":"#_2-2-块、行内、行内块","children":[]},{"level":3,"title":"2.3 元素显示模式转换","slug":"_2-3-元素显示模式转换","link":"#_2-3-元素显示模式转换","children":[]},{"level":3,"title":"2.4 元素显示模式总结","slug":"_2-4-元素显示模式总结","link":"#_2-4-元素显示模式总结","children":[]}]}],"git":{"createdTime":1733124588000,"updatedTime":1733124588000,"contributors":[{"name":"liubin","email":"liubin8919@qq.com","commits":1}]},"readingTime":{"minutes":6.77,"words":2031},"filePathRelative":"front_end/front_end_base/html_css/05.md","localizedDate":"2024年12月2日","excerpt":"\\n<h2>1.CSS的引入方式</h2>\\n<h3>1.1 CSS的三种引入方式</h3>\\n<p>按照 CSS 样式书写的位置（或者引入的方式），CSS 样式表可以分为三大类：</p>\\n<ul>\\n<li>行内样式表（行内式）</li>\\n<li>内部样式表（嵌入式）</li>\\n<li>外部样式表（外链式）</li>\\n</ul>\\n<h3>1.2 行内样式表</h3>\\n<p>行内样式表（内联样式表）是在元素标签内部的 style 属性中设定 CSS 样式，适合于修改简单样式。</p>\\n<div class=\\"language-html line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"html\\" data-title=\\"html\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&lt;</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">div</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> style</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">=</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#98C379\\">color: red; font-size: 12px;</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">    青春不常在，抓紧谈恋爱</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&lt;/</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">div</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&gt;</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}')}}]);