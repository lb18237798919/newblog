"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9967],{6262:(i,s)=>{s.A=(i,s)=>{const a=i.__vccOpts||i;for(const[i,n]of s)a[i]=n;return a}},6157:(i,s,a)=>{a.r(s),a.d(s,{comp:()=>l,data:()=>h});var n=a(641);const e={},l=(0,a(6262).A)(e,[["render",function(i,s){return(0,n.uX)(),(0,n.CE)("div",null,s[0]||(s[0]=[(0,n.Fv)('<h1 id="_03-【npm的使用】" tabindex="-1"><a class="header-anchor" href="#_03-【npm的使用】"><span>03 【npm的使用】</span></a></h1><h2 id="_1-包和npm" tabindex="-1"><a class="header-anchor" href="#_1-包和npm"><span>1.包和npm</span></a></h2><h3 id="_1-1-什么是包" tabindex="-1"><a class="header-anchor" href="#_1-1-什么是包"><span>1.1 什么是包</span></a></h3><p>由于 Node 是一套轻内核的平台，虽然提供了一系列的内置模块，但是不足以满足开发者的需求，于是乎出现了包（package）的概念： 与核心模块类似，就是将一些预先设计好的功能或者说 API 封装到一个文件夹，提供给开发者使用。</p><p>Node 本身并没有太多的功能性 API，所以市面上涌现出大量的第三方人员开发出来的 Package。</p><h3 id="_1-2-包的加载机制" tabindex="-1"><a class="header-anchor" href="#_1-2-包的加载机制"><span>1.2 包的加载机制</span></a></h3><p>Node.js中使用<code>CommonJs</code>模块化机制，通过<code>npm</code>下载的第三方包，我们在项目中引入第三方包都是：<code>let xx = require(&#39;第三方包名&#39;)</code>，究竟<code>require</code>方法加载第三方包的原理机制是什么，今天我们来探讨下。</p><ol><li><code>require(&#39;第三方包名&#39;)</code>优先在加载该包的模块的同级目录<code>node_modules</code>中查找第三方包。</li><li>找到该第三方包中的<code>package.json</code>文件，并且找到里面的<code>main</code>属性对应的入口模块，该入口模块即为加载的第三方模块。</li><li>如果在要加载的第三方包中没有找到<code>package.json</code>文件或者是<code>package.json</code>文件中没有<code>main</code>属性，则默认加载第三方包中的<code>index.js</code>文件。</li><li>如果在加载第三方模块的文件的同级目录没有找到<code>node_modules</code>文件夹，或者以上所有情况都没有找到，则会向上一级父级目录下查找<code>node_modules</code>文件夹，查找规则如上一致。</li><li>如果一直找到该模块的磁盘根路径都没有找到，则会报错：<code>can not find module xxx</code>。</li></ol><p>比如说：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">requiere</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">`fs`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>那加载的肯定是系统的包。所以，我们尽量不要创建一些和现有的包重名的包。</p><h3 id="_1-3-npm-的概念" tabindex="-1"><a class="header-anchor" href="#_1-3-npm-的概念"><span>1.3 npm 的概念</span></a></h3><p><strong>NPM</strong>：Node Package Manager。官方链接： https://www.npmjs.com/</p><p>Node.js 发展到现在，已经形成了一个非常庞大的生态圈。包的生态圈一旦繁荣起来，就必须有工具去来管理这些包。NPM 应运而生。</p><p>举个例子，当我们在使用 Java 语言做开发时，需要用到 JDK 提供的内置库，以及第三方库。同样，在使用 JS 做开发时，我们可以使用 NPM 包管理器，方便地使用成熟的、优秀的第三方框架，融合到我们自己的项目中，极大地加速日常开发的构建过程。</p><p>随着时间的发展，NPM 出现了两层概念：</p><ul><li>一层含义是 Node 的开放式模块登记和管理系统，亦可以说是一个生态圈，一个社区。</li><li>另一层含义是 Node 默认的模块管理器，是一个命令行下的软件，用来安装和管理 Node 模块。</li></ul><h3 id="_1-4-npm-的安装-不需要单独安装" tabindex="-1"><a class="header-anchor" href="#_1-4-npm-的安装-不需要单独安装"><span>1.4 npm 的安装（不需要单独安装）</span></a></h3><p>NPM 不需要单独安装。默认在安装 Node 的时候，会连带一起安装 NPM</p><p>NVM、Node、NPM 安装之后，目录分布如下：</p><figure><img src="https://i0.hdslb.com/bfs/album/9d95a2589e45d1d9eaf6fc481335363b9490ec24.png" alt="image-20221102143348894" tabindex="0" loading="lazy"><figcaption>image-20221102143348894</figcaption></figure><figure><img src="https://i0.hdslb.com/bfs/album/11a2587512af408095fe6f2786c596b7ee5e6dbf.png" alt="image-20221102143357922" tabindex="0" loading="lazy"><figcaption>image-20221102143357922</figcaption></figure><figure><img src="https://i0.hdslb.com/bfs/album/137d79fa1ea96221bf9f4baa465ebe7080b500ca.png" alt="image-20221102143410471" tabindex="0" loading="lazy"><figcaption>image-20221102143410471</figcaption></figure><p>输入 <code>npm -v</code>，查看 npm 的版本</p><p>如果上方命令无效，可能是之前的 node 并没有完全安装成功。解决办法：https://segmentfault.com/a/1190000011114680</p><p>另外，Node 附带的 NPM 可能不是最新版本，可以用下面的命令，更新到最新版本：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> npm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -g</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_1-5-配置-npm-的全局目录" tabindex="-1"><a class="header-anchor" href="#_1-5-配置-npm-的全局目录"><span>1.5 配置 NPM 的全局目录</span></a></h3><p>NPM 默认安装到当前正在使用 Node 版本所在目录下。我们建议重新配置 NPM 的全局目录。</p><p>输入<code>npm config ls</code>，查看</p><p>https://blog.csdn.net/smalCat/article/details/79505441</p><h2 id="_2-npm-的常用命令" tabindex="-1"><a class="header-anchor" href="#_2-npm-的常用命令"><span>2.NPM 的常用命令</span></a></h2><p>查看 npm 当前版本：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>更新 npm：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> npm@latest</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -g</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>项目初始化：（执行完成后，会生成<code>package.json</code>文件）</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 快速跳过问答式界面，选择默认配置</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --yes</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>只在当前工程下安装指定的包：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [package]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在全局安装指定的包：</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>npm install -g [package]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>安装的包只用于开发环境，不用于生产环境：（会出现在 package.json 文件中的 devDependencies 属性中）</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [package] --save-dev</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 或者</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [package] -D</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装的包需要发布到生产环境：（会出现在 package.json 文件中的 dependencies 属性中）</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [package] --save</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 或者</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [package] -S</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看当前目录下已安装的 node 包：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> list</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看全局已经安装的 node 包：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> list</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -g</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看 npm 帮助命令：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --help</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看指定命令的帮助：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [指定命令] --help</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>更新指定的包：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [package]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>卸载指定的包：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> uninstall</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [package]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看配置信息：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> list</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看本地安装的指定包的信息，没有则显示 empty：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ls</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [package]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看全局安装的指定包的信息，没有则显示 empty：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ls</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [package] -g</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看远程 npm 上指定包的所有版本信息：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> info</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [package] versions</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看当前包的安装路径：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看全局包的安装路径：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -g</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_3-配置-npm-镜像源" tabindex="-1"><a class="header-anchor" href="#_3-配置-npm-镜像源"><span>3.配置 npm 镜像源</span></a></h2><p>由于 npm 默认的下载地址在国外（npmjs.com），有时候会被墙，导致无法下载或者下载很慢。因此，我们可以尝试切换成，从其他的镜像源下载 npm 包。</p><p>切换镜像源，有下面这几种方式：</p><ul><li>方式 1：临时切换镜像源。</li><li>方式 2：切换镜像源</li><li>方式 3：通过 NRM 切换镜像源（最为推荐的方式）。</li><li>方式 4：cnpm。</li></ul><h3 id="_3-1-方式-1-临时切换镜像源" tabindex="-1"><a class="header-anchor" href="#_3-1-方式-1-临时切换镜像源"><span>3.1 方式 1：临时切换镜像源</span></a></h3><p>安装指定包的时候，通过追加 <code>--registry</code>参数即可。格式如下：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 格式</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [package] --registry [https://xxx]</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 举例：在下载安装 express 这个包的时候，临时指定镜像源为 https://registry.npm.taobao.org</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> express</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --registry</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://registry.npmmirror.com/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-方式-2-切换镜像源" tabindex="-1"><a class="header-anchor" href="#_3-2-方式-2-切换镜像源"><span>3.2 方式 2：切换镜像源</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> registry</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://registry.npmmirror.com/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>执行上述命令后，以后下载所有 npm 包的时候，都会改为使用淘宝的镜像源。</p><h3 id="_3-3-方式-3-通过-nrm-切换镜像源-推荐" tabindex="-1"><a class="header-anchor" href="#_3-3-方式-3-通过-nrm-切换镜像源-推荐"><span>3.3 方式 3：通过 NRM 切换镜像源（推荐）</span></a></h3><p><strong>NRM</strong>：Node Registry Manager。作用是：<strong>切换和管理 npm 包的镜像源</strong>。</p><ul><li>项目地址：https://www.npmjs.com/package/nrm</li><li>GitHub 地址： https://github.com/Pana/nrm</li></ul><p><strong>安装 NRM</strong>：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -g</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nrm</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>执行命令<code>nrm ls</code>查看可选的源。</p></blockquote><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ----------</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://registry.npmjs.org/</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">yarn</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ---------</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://registry.yarnpkg.com/</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tencent</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ------</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://mirrors.cloud.tencent.com/npm/</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cnpm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ---------</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://r.cnpmjs.org/</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">taobao</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -------</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://registry.npmmirror.com/</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npmMirror</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ----</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://skimdb.npmjs.com/registry/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>切换</li></ol><p>如果要切换到<code>taobao</code>源，执行命令 <code>nrm use taobao</code>。</p><ol start="2"><li>增加</li></ol><p>你可以增加定制的源，特别适用于添加企业内部的私有源，执行命令 <code>nrm add &lt;registry&gt; &lt;url&gt;</code>，其中<code>reigstry</code>为源名，<code>url</code>为源的路径。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nrm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> registry</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://registry.npm.frp.trmap.cn/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="3"><li>删除</li></ol><p>执行命令<code>nrm del &lt;registry&gt;</code>删除对应的源。</p><ol start="4"><li>测试速度</li></ol><p>你还可以通过 <code>nrm test</code> 测试相应源的响应时间。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nrm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> npm</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_3-4-方式-4-安装-cnpm" tabindex="-1"><a class="header-anchor" href="#_3-4-方式-4-安装-cnpm"><span>3.4 方式 4：安装 cnpm</span></a></h3><ul><li>项目地址：<a href="https://npmmirror.com/" target="_blank" rel="noopener noreferrer">npmmirror 中国镜像站</a></li></ul><p>安装<code>cnpm</code>替换 npm（npm 由于源服务器在国外，下载包的速度较慢，cnpm 会使用国内镜像）：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -g</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cnpm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --registry=https://registry.npmmirror.com</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>以后我们就可以通过 cnpm 命令去安装一个包。举例如下：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 安装 vue 这个包</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vue</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>这里的单词 <code>install</code> 可以简写成 <code>i</code>。</p><h2 id="_4-什么是-npm-脚本" tabindex="-1"><a class="header-anchor" href="#_4-什么是-npm-脚本"><span>4.什么是 npm 脚本</span></a></h2><blockquote><p>npm 允许在<code>package.json</code>文件里面，使用<code>scripts</code>字段定义脚本命令。<code>package.json</code> 里面的<code>scripts</code> 字段是一个对象。它的每一个属性，对应一段脚本。定义在<code>package.json</code>里面的脚本，就称为 <code>npm</code> 脚本。</p></blockquote><p>查看当前项目的所有 npm 脚本命令，可以使用不带任何参数的<code>npm run</code>命令。</p><h3 id="_4-1-使用" tabindex="-1"><a class="header-anchor" href="#_4-1-使用"><span>4.1 使用</span></a></h3><ul><li><code>npm run</code> 脚本名称</li><li>如果是并行执行（即同时的平行执行），可以使用&amp;符号。 <code>npm run script1.js &amp; npm run script2.js</code></li><li>如果是继发执行（即只有前一个任务成功，才执行下一个任务），可以使用&amp;&amp;符号。<code>npm run script1.js &amp;&amp; npm run script2.js</code></li></ul><h3 id="_4-2-简写形式" tabindex="-1"><a class="header-anchor" href="#_4-2-简写形式"><span>4.2 简写形式</span></a></h3><ul><li><code>npm start</code> 即 <code>npm run start</code></li><li><code>npm stop</code> 即 <code>npm run stop</code></li><li><code>npm test</code> 即 <code>npm run test</code></li><li><code>npm restart</code> 即 <code>npm run stop &amp;&amp; npm run restart &amp;&amp; npm run start</code></li></ul><h2 id="_5-pnpm" tabindex="-1"><a class="header-anchor" href="#_5-pnpm"><span>5.pnpm</span></a></h2><h3 id="_5-1-pnpm-是什么" tabindex="-1"><a class="header-anchor" href="#_5-1-pnpm-是什么"><span>5.1 pnpm 是什么</span></a></h3><blockquote><p>pnpm是 Node.js 的替代包管理器。它是 npm 的直接替代品，但速度更快、效率更高。</p></blockquote><blockquote><p>为什么效率更高？当您安装软件包时，我们会将其保存在您机器上的全局存储中，然后我们会从中创建一个硬链接，而不是进行复制。对于模块的每个版本，磁盘上只保留一个副本。例如，当使用 npm 或 yarn 时，如果您有 100 个使用 lodash 的包，则磁盘上将有 100 个 lodash 副本。pnpm 可让您节省数 GB 的磁盘空间！</p></blockquote><p>pnpm优势 pnpm 拥有 Yarn 超过 npm 的所有附加功能：</p><ul><li><strong>安全</strong>: 与 yarn 一样，pnpm 有一个包含所有已安装包校验和的特殊文件，用于在执行代码之前验证每个已安装包的完整性。</li><li><strong>离线模式</strong>: pnpm 将所有下载的包 tarball 保存在本地注册表镜像中。当包在本地可用时，它从不发出请求。使用该--offline参数可以完全禁止 HTTP 请求。</li><li><strong>速度</strong>: pnpm 不仅比 npm 快，而且比 yarn 快。无论是冷缓存还是热缓存，它都比 yarn 快。yarn 从缓存中复制文件，而 pnpm 只是从全局存储中链接它们。</li></ul><h3 id="_5-2-pnpm-的使用" tabindex="-1"><a class="header-anchor" href="#_5-2-pnpm-的使用"><span>5.2 pnpm 的使用</span></a></h3><p><strong>官网</strong>： <code>https://pnpm.js.org/installation/</code></p><p><strong>全局安装</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pnpm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -g</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>设置源</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">//查看源</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> registry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">//切换淘宝源</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> registry</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://registry.npmmirror.com/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>使用</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">//可以和npm一样使用方式</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //直接初始化</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 包</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  //</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 包</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 包</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    //</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  默认写入dependencies</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -D</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    //</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -D</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> devDependencies</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -g</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 全局安装</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>移除</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remove</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uninstall</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">包</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                            //移除包</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remove</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 包</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                   //移除全局包</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>更新</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> up</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                //更新所有依赖项</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> upgrade</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 包</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        //更新包</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> upgrade</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 包</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   //更新全局包</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> up</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --latest</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //最新更新所有依赖项，忽略package.json中指定的范围</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-npm命令总结" tabindex="-1"><a class="header-anchor" href="#_6-npm命令总结"><span>6.npm命令总结</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1.npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 添加初始化文件记录安装信息，如果在后面加-S或者-D会自动创建该文件</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2.npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 包名</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> –g</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  （uninstall,update）</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">3.npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 包名</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --save（-S）</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --dev(-D</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uninstall,update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">如果不写后缀默认是安装到生产环境</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">如果先装到了开发环境，那么后面覆盖安装不写后缀也是本身的环境下</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">一个包只能存在在一种环境，得先卸载才能换环境</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">4.npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> list</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -g</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (不加-g，列举当前目录下的安装包)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">5.npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> info</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 包名（详细信息）</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> info</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 包名</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (获取最新版本)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">6.npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> md5@1.8.0（安装指定版本）</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">7.npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> outdated</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">检查包是否已经过时</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">如果版本比较新就不会有输出</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">8.pwd输出当前目录的绝对路径</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">9.npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> view</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 包名</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> version查看当前版本</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> view</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 包名</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> versions查看该包所有版本</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">10.npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 包名</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 更新指定包</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 更新所有的包（pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> up）</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">11.npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> list</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  查看npm配置信息</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">12.npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 指定命令</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --help</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 查看指定命令的帮助。</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">13.npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root：查看当前包的安装路径。</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -g：查看全局的包的安装路径。</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">14.npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ls</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 包名：查看本地安装的指定包及版本信息，没有显示empty。</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ls</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 包名</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -g：查看全局安装的指定包及版本信息</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">15.npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cache</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clean</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --force</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 清除缓存</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">16.npm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v查看npm的版本</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;dependencies&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;md5&quot;:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;^2.1.0&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  }</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  ^</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 表示</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 如果</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 直接npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 将会</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 安md5@2.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  \t最新版本</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;dependencies&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;md5&quot;:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;~2.1.0&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  }</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  ~</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 表示</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 如果</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 直接npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 将会</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 安装md5</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 2.1.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  最新版本</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;dependencies&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;md5&quot;:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;*&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  }</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">  *</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 表示</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 如果</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 直接npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 将会</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 安装</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> md5</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  最新版本</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-使用-nodemon-自动重启服务" tabindex="-1"><a class="header-anchor" href="#_7-使用-nodemon-自动重启服务"><span>7.使用 nodemon 自动重启服务</span></a></h2><p>我们在开发的过程中，每次改完代码之后都必须重启服务器，显然这样的操作效率是比较低，这里给大家推荐个工具，<code>nodemon</code>,<code>nodemon</code>可以帮我们实时监听项目中代码的变化，并且自动重启服务，而且配置简单。</p><ol><li><p>安装：<code>npm install -g nodemon</code></p><blockquote><p>如果无法使用nodemon，那么要去环境变量中进行配置</p></blockquote></li><li><p>使用<code>nodemon</code>运行项目，取代之前的<code>node app.js</code>。</p></li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>nodemon  app.js</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>项目运行之后，<code>nodemon</code>会自动监听代码的改动，并且重新启动服务，大大增加我们开发效率。</p><ol start="3"><li><code>nodemon</code>常见配置</li></ol><ul><li>在命令行指定应用的端口号：<code>nodemon ./server.js localhost 8080</code></li><li>查看帮助，帮助里面有很多选项都是一目了然：<code>nodemon -h 或者 nodemon --help</code></li><li>运行 debug 模式：<code>nodemon --debug ./server.js 80</code></li><li>手动重启项目： <code>Nodemon</code> 命令运行的终端 窗口中输入 <code>rs</code> 两个字符，然后再按下回车键，就能手动重启 <code>Nodemon</code>了。</li></ul>',138)]))}]]),h=JSON.parse('{"path":"/back_end/nodeJs/03.html","title":"03 【npm的使用】","lang":"zh-CN","frontmatter":{"description":"03 【npm的使用】 1.包和npm 1.1 什么是包 由于 Node 是一套轻内核的平台，虽然提供了一系列的内置模块，但是不足以满足开发者的需求，于是乎出现了包（package）的概念： 与核心模块类似，就是将一些预先设计好的功能或者说 API 封装到一个文件夹，提供给开发者使用。 Node 本身并没有太多的功能性 API，所以市面上涌现出大量的第...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/newblog/back_end/nodeJs/03.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"03 【npm的使用】"}],["meta",{"property":"og:description","content":"03 【npm的使用】 1.包和npm 1.1 什么是包 由于 Node 是一套轻内核的平台，虽然提供了一系列的内置模块，但是不足以满足开发者的需求，于是乎出现了包（package）的概念： 与核心模块类似，就是将一些预先设计好的功能或者说 API 封装到一个文件夹，提供给开发者使用。 Node 本身并没有太多的功能性 API，所以市面上涌现出大量的第..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://i0.hdslb.com/bfs/album/9d95a2589e45d1d9eaf6fc481335363b9490ec24.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-02T07:29:48.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-02T07:29:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"03 【npm的使用】\\",\\"image\\":[\\"https://i0.hdslb.com/bfs/album/9d95a2589e45d1d9eaf6fc481335363b9490ec24.png\\",\\"https://i0.hdslb.com/bfs/album/11a2587512af408095fe6f2786c596b7ee5e6dbf.png\\",\\"https://i0.hdslb.com/bfs/album/137d79fa1ea96221bf9f4baa465ebe7080b500ca.png\\"],\\"dateModified\\":\\"2024-12-02T07:29:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"1.包和npm","slug":"_1-包和npm","link":"#_1-包和npm","children":[{"level":3,"title":"1.1 什么是包","slug":"_1-1-什么是包","link":"#_1-1-什么是包","children":[]},{"level":3,"title":"1.2 包的加载机制","slug":"_1-2-包的加载机制","link":"#_1-2-包的加载机制","children":[]},{"level":3,"title":"1.3 npm 的概念","slug":"_1-3-npm-的概念","link":"#_1-3-npm-的概念","children":[]},{"level":3,"title":"1.4 npm 的安装（不需要单独安装）","slug":"_1-4-npm-的安装-不需要单独安装","link":"#_1-4-npm-的安装-不需要单独安装","children":[]},{"level":3,"title":"1.5 配置 NPM 的全局目录","slug":"_1-5-配置-npm-的全局目录","link":"#_1-5-配置-npm-的全局目录","children":[]}]},{"level":2,"title":"2.NPM 的常用命令","slug":"_2-npm-的常用命令","link":"#_2-npm-的常用命令","children":[]},{"level":2,"title":"3.配置 npm 镜像源","slug":"_3-配置-npm-镜像源","link":"#_3-配置-npm-镜像源","children":[{"level":3,"title":"3.1 方式 1：临时切换镜像源","slug":"_3-1-方式-1-临时切换镜像源","link":"#_3-1-方式-1-临时切换镜像源","children":[]},{"level":3,"title":"3.2 方式 2：切换镜像源","slug":"_3-2-方式-2-切换镜像源","link":"#_3-2-方式-2-切换镜像源","children":[]},{"level":3,"title":"3.3 方式 3：通过 NRM 切换镜像源（推荐）","slug":"_3-3-方式-3-通过-nrm-切换镜像源-推荐","link":"#_3-3-方式-3-通过-nrm-切换镜像源-推荐","children":[]},{"level":3,"title":"3.4 方式 4：安装 cnpm","slug":"_3-4-方式-4-安装-cnpm","link":"#_3-4-方式-4-安装-cnpm","children":[]}]},{"level":2,"title":"4.什么是 npm 脚本","slug":"_4-什么是-npm-脚本","link":"#_4-什么是-npm-脚本","children":[{"level":3,"title":"4.1 使用","slug":"_4-1-使用","link":"#_4-1-使用","children":[]},{"level":3,"title":"4.2 简写形式","slug":"_4-2-简写形式","link":"#_4-2-简写形式","children":[]}]},{"level":2,"title":"5.pnpm","slug":"_5-pnpm","link":"#_5-pnpm","children":[{"level":3,"title":"5.1 pnpm 是什么","slug":"_5-1-pnpm-是什么","link":"#_5-1-pnpm-是什么","children":[]},{"level":3,"title":"5.2 pnpm 的使用","slug":"_5-2-pnpm-的使用","link":"#_5-2-pnpm-的使用","children":[]}]},{"level":2,"title":"6.npm命令总结","slug":"_6-npm命令总结","link":"#_6-npm命令总结","children":[]},{"level":2,"title":"7.使用 nodemon 自动重启服务","slug":"_7-使用-nodemon-自动重启服务","link":"#_7-使用-nodemon-自动重启服务","children":[]}],"git":{"createdTime":1733124588000,"updatedTime":1733124588000,"contributors":[{"name":"liubin","email":"liubin8919@qq.com","commits":1}]},"readingTime":{"minutes":10.54,"words":3163},"filePathRelative":"back_end/nodeJs/03.md","localizedDate":"2024年12月2日","excerpt":"\\n<h2>1.包和npm</h2>\\n<h3>1.1 什么是包</h3>\\n<p>由于 Node 是一套轻内核的平台，虽然提供了一系列的内置模块，但是不足以满足开发者的需求，于是乎出现了包（package）的概念： 与核心模块类似，就是将一些预先设计好的功能或者说 API 封装到一个文件夹，提供给开发者使用。</p>\\n<p>Node 本身并没有太多的功能性 API，所以市面上涌现出大量的第三方人员开发出来的 Package。</p>\\n<h3>1.2 包的加载机制</h3>\\n<p>Node.js中使用<code>CommonJs</code>模块化机制，通过<code>npm</code>下载的第三方包，我们在项目中引入第三方包都是：<code>let xx = require(\'第三方包名\')</code>，究竟<code>require</code>方法加载第三方包的原理机制是什么，今天我们来探讨下。</p>","autoDesc":true}')}}]);