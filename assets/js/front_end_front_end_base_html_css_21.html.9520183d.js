"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8337],{6262:(i,s)=>{s.A=(i,s)=>{const e=i.__vccOpts||i;for(const[i,l]of s)e[i]=l;return e}},354:(i,s,e)=>{e.r(s),e.d(s,{comp:()=>n,data:()=>t});var l=e(641);const a={},n=(0,e(6262).A)(a,[["render",function(i,s){return(0,l.uX)(),(0,l.CE)("div",null,s[0]||(s[0]=[(0,l.Fv)('<h1 id="_21-【vw布局】" tabindex="-1"><a class="header-anchor" href="#_21-【vw布局】"><span>21 【vw布局】</span></a></h1><h2 id="_1-移动端布局" tabindex="-1"><a class="header-anchor" href="#_1-移动端布局"><span>1.移动端布局</span></a></h2><p>移动端布局 --- flex 布局</p><p>为了实现可以适配移动端，页面元素可以宽度和高度等比例缩放</p><p>需要移动端适配有如下方案：</p><p>（1）rem</p><p>市场比较常见：</p><ol><li>需要不断修改 html 文字大小</li><li>需要媒体查询 media</li><li>需要 flexible.js</li></ol><p>（2）vw / vh</p><p>未来的趋势：</p><ol><li>省去各种判断和修改</li><li>代表：bilibili、小米……</li></ol><h2 id="_2-vw-vh是什么" tabindex="-1"><a class="header-anchor" href="#_2-vw-vh是什么"><span>2.vw/vh是什么？</span></a></h2><ul><li>vw/vh 是一个相对单位（类似 em 和 rem 相对单位） <ul><li>vw 是：viewport width 视口宽度单位</li><li>vh 是：viewport height 视口高度单位</li></ul></li><li>相对视口的尺寸计算结果 <ul><li>1vw = 1/100 视口宽度</li><li>1vh = 1/100 视口高度</li></ul></li></ul><p>例如：</p><p>当前屏幕视口是 375px，则 1vw 就是 3.75px，如果当前屏幕视口为 414px，则 1vw 就是 4.14px。</p><p><strong>注意：和百分比有区别，百分比是相对于父元素来说的，而 vw 和 vh 总是针对于当前视口来说的。</strong></p><h2 id="_3-vw-vh怎么用" tabindex="-1"><a class="header-anchor" href="#_3-vw-vh怎么用"><span>3.vw/vh怎么用？</span></a></h2><ul><li>超级简单，元素单位直接使用新单位 vw/vh 即可</li><li>因为 vw/vh 是相对单位，所以不同视口（屏幕）下，宽高一起变化完成适配</li></ul><blockquote><p>直接使用即可！永远滴神！</p></blockquote><p>【案例】</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    width: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">vw</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    height: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">vh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    background-color: </span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">pink</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>如何还原设计稿？</strong></p><p>前提：我们设计稿按照 iPhone 6/7/8 来设计，有个盒子是 50px * 50px 的，如何使用 vw 呢？</p><p>分析：</p><ol><li><p>设计稿参照 iPhone 6/7/8，所以视口宽度尺寸是 375px（设计原型图平台切换到 2x 模式再测量，因为 UI 设计图是 750px 的）</p></li><li><p>那么 1vw 是多少像素？</p><p>375px / 100 = 3.75px</p></li><li><p>我们元素的目标是多少像素？</p><p>50px * 50px</p></li><li><p>那么 50 * 50 是多少个 vw？</p><p>50 / 3.75 = 13.3333vw</p></li></ol><blockquote><p>在像素大厨等 UI 软件中，直接选择 vw 单位然后测量即可，不用人工计算。</p></blockquote><h2 id="_4-vw注意事项" tabindex="-1"><a class="header-anchor" href="#_4-vw注意事项"><span>4.vw注意事项</span></a></h2><ul><li><p>因为涉及到大量除法且有除不尽的情况，所以还是适应 LESS 搭配更好点</p></li><li><p>我们本质是根据视口宽度来等比例缩放页面元素高度和宽度的，所以开发中使用 vw 就基本够用了。vh 很少使用（高度变化时，我们一般不需要元素大小进行变化，所以用不到 vh）</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    /* 都用vm */</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    width: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">13.333333</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">vw</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    height: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">12.666666</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">vw</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    font-size: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5.333333</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">vw</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    background-color: </span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">pink</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>兼容性，网站：https://caniuse.com/</p></li></ul><blockquote><p>目前适用于移动端，PC 端不适用。</p></blockquote><h2 id="_5-vscode-px-vw-插件" tabindex="-1"><a class="header-anchor" href="#_5-vscode-px-vw-插件"><span>5.VSCode px-&gt;vw 插件</span></a></h2><figure><img src="https://i0.hdslb.com/bfs/album/911c795fd54971b3cda2cab06ade197bf65735e0.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>记得进行设置：</p><blockquote><p>打开 px2vw 插件主页、点击设置按钮、点击扩展设置。</p></blockquote><figure><img src="https://i0.hdslb.com/bfs/album/e4e3af30b5d81f3c426e2aa311ed7214067ddaf6.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_6-移动端布局推荐" tabindex="-1"><a class="header-anchor" href="#_6-移动端布局推荐"><span>6.移动端布局推荐</span></a></h2><p><code>flex</code> + <code>less</code> + <code>vw</code></p>',36)]))}]]),t=JSON.parse('{"path":"/front_end/front_end_base/html_css/21.html","title":"21 【vw布局】","lang":"zh-CN","frontmatter":{"description":"21 【vw布局】 1.移动端布局 移动端布局 --- flex 布局 为了实现可以适配移动端，页面元素可以宽度和高度等比例缩放 需要移动端适配有如下方案： （1）rem 市场比较常见： 需要不断修改 html 文字大小 需要媒体查询 media 需要 flexible.js （2）vw / vh 未来的趋势： 省去各种判断和修改 代表：bilibil...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/newblog/front_end/front_end_base/html_css/21.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"21 【vw布局】"}],["meta",{"property":"og:description","content":"21 【vw布局】 1.移动端布局 移动端布局 --- flex 布局 为了实现可以适配移动端，页面元素可以宽度和高度等比例缩放 需要移动端适配有如下方案： （1）rem 市场比较常见： 需要不断修改 html 文字大小 需要媒体查询 media 需要 flexible.js （2）vw / vh 未来的趋势： 省去各种判断和修改 代表：bilibil..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://i0.hdslb.com/bfs/album/911c795fd54971b3cda2cab06ade197bf65735e0.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-02T07:29:48.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-02T07:29:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"21 【vw布局】\\",\\"image\\":[\\"https://i0.hdslb.com/bfs/album/911c795fd54971b3cda2cab06ade197bf65735e0.png\\",\\"https://i0.hdslb.com/bfs/album/e4e3af30b5d81f3c426e2aa311ed7214067ddaf6.png\\"],\\"dateModified\\":\\"2024-12-02T07:29:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"1.移动端布局","slug":"_1-移动端布局","link":"#_1-移动端布局","children":[]},{"level":2,"title":"2.vw/vh是什么？","slug":"_2-vw-vh是什么","link":"#_2-vw-vh是什么","children":[]},{"level":2,"title":"3.vw/vh怎么用？","slug":"_3-vw-vh怎么用","link":"#_3-vw-vh怎么用","children":[]},{"level":2,"title":"4.vw注意事项","slug":"_4-vw注意事项","link":"#_4-vw注意事项","children":[]},{"level":2,"title":"5.VSCode px->vw 插件","slug":"_5-vscode-px-vw-插件","link":"#_5-vscode-px-vw-插件","children":[]},{"level":2,"title":"6.移动端布局推荐","slug":"_6-移动端布局推荐","link":"#_6-移动端布局推荐","children":[]}],"git":{"createdTime":1733124588000,"updatedTime":1733124588000,"contributors":[{"name":"liubin","email":"liubin8919@qq.com","commits":1}]},"readingTime":{"minutes":2.18,"words":655},"filePathRelative":"front_end/front_end_base/html_css/21.md","localizedDate":"2024年12月2日","excerpt":"\\n<h2>1.移动端布局</h2>\\n<p>移动端布局 --- flex 布局</p>\\n<p>为了实现可以适配移动端，页面元素可以宽度和高度等比例缩放</p>\\n<p>需要移动端适配有如下方案：</p>\\n<p>（1）rem</p>\\n<p>市场比较常见：</p>\\n<ol>\\n<li>需要不断修改 html 文字大小</li>\\n<li>需要媒体查询 media</li>\\n<li>需要 flexible.js</li>\\n</ol>\\n<p>（2）vw / vh</p>\\n<p>未来的趋势：</p>\\n<ol>\\n<li>省去各种判断和修改</li>\\n<li>代表：bilibili、小米……</li>\\n</ol>\\n","autoDesc":true}')}}]);