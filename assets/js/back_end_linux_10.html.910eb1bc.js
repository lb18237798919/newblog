"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8342],{6262:(s,i)=>{i.A=(s,i)=>{const a=s.__vccOpts||s;for(const[s,t]of i)a[s]=t;return a}},8538:(s,i,a)=>{a.r(i),a.d(i,{comp:()=>h,data:()=>n});var t=a(641);const l={},h=(0,a(6262).A)(l,[["render",function(s,i){return(0,t.uX)(),(0,t.CE)("div",null,i[0]||(i[0]=[(0,t.Fv)('<h1 id="_10-【实操篇-进程管理类】" tabindex="-1"><a class="header-anchor" href="#_10-【实操篇-进程管理类】"><span>10 【实操篇-进程管理类】</span></a></h1><p>无论是 Linux 系统管理员还是普通用户，监视系统进程的运行情况并适时终止一些失控的进程，是每天的例行事务。和 Linux 系统相比，进程管理在 Windows 中更加直观，它主要是使用&quot;任务管理器&quot;来进行进程管理的。</p><p>通常，使用&quot;任务管理器&quot;主要有 3 个目的：</p><ol><li>利用&quot;应用程序&quot;和&quot;进程&quot;标签来査看系统中到底运行了哪些程序和进程；</li><li>利用&quot;性能&quot;和&quot;用户&quot;标签来判断服务器的健康状态；</li><li>在&quot;应用程序&quot;和&quot;进程&quot;标签中强制中止任务和进程；</li></ol><p>Linux 中虽然使用命令进行进程管理，但是进程管理的主要目的是一样的，即查看系统中运行的程序和进程、判断服务器的健康状态和强制中止不需要的进程。</p><p>那么，到底什么是进程呢？它和我们平时所说的“程序”又有什么联系呢？</p><h2 id="_1-什么是进程和程序" tabindex="-1"><a class="header-anchor" href="#_1-什么是进程和程序"><span>1.什么是进程和程序</span></a></h2><p>进程是正在执行的一个程序或命令，每个进程都是一个运行的实体，都有自己的地址空间，并占用一定的系统资源。程序是人使用计算机语言编写的可以实现特定目标或解决特定问题的代码集合。</p><p>这么讲很难理解，那我们换一种说法。程序是人使用计算机语言编写的，可以实现一定功能，并且可以执行的代码集合。而进程是正在执行中的程序。当程序被执行时，执行人的权限和属性，以及程序的代码都会被加载入内存，操作系统给这个进程分配一个 ID，称为 PID（进程 ID）。</p><p>也就是说，在操作系统中，所有可以执行的程序与命令都会产生进程。只是有些程序和命令非常简单，如 ls 命令、touch 命令等，它们在执行完后就会结束，相应的进程也就会终结，所以我们很难捕捉到这些进程。但是还有一些程和命令，比如 httpd 进程，启动之后就会一直驻留在系统当中，我们把这样的进程称作常驻内存进程。</p><p>某些进程会产生一些新的进程，我们把这些进程称作子进程，而把这个进程本身称作父进程。比如，我们必须正常登录到 Shell 环境中才能执行系统命令，而 Linux 的标准 Shell 是 bash。我们在 bash 当中执行了 ls 命令，那么 bash 就是父进程，而 ls 命令是在 bash 进程中产生的进程，所以 ls 进程是 bash 进程的子进程。也就是说，子进程是依赖父进程而产生的，如果父进程不存在，那么子进程也不存在了。</p><h2 id="_2-进程管理的作用" tabindex="-1"><a class="header-anchor" href="#_2-进程管理的作用"><span>2.进程管理的作用</span></a></h2><p>在使用 Windows 系统的过程中，使用任务管理器，很大程度上是为了强制关闭“未反应”的软件，也就是杀死进程。的确，这是很多使用进程管理工具或进程管理命令的人最常见的使用方法。不过，杀死进程（强制中止进程）只是进程管理工作中最不常用的手段，因为每个进程都有自己正确的结束方法，而杀死进程是在正常方法已经失效的情况下的后备手段。</p><p>那么，进程管理到底应该是做什么的呢？我以为，进程管理主要有以下 3 个作用。</p><p><strong>1) 判断服务器的健康状态</strong></p><p>运维工程师最主要的工作就是保证服务器安全、稳定地运行。理想的状态是，在服务器出现问题，但是还没有造成服务器宕机或停止服务时，就人为干预解决了问题。</p><p>进程管理最主要的工作就是判断服务器当前运行是否健康，是否需要人为干预。如果服务器的 CPU 占用率、内存占用率过高，就需要人为介入解决问题了。这又出现了一个问题，我们发现服务器的 CPU 或内存占用率很高，该如何介入呢？是直接终止高负载的进程吗？</p><p>当然不是，应该判断这个进程是否是正常进程，如果是正常进程，则说明你的服务器已经不能满足应用需求，你需要更好的硬件或搭建集群了；如果是非法进程占用了系统资源，则更不能直接中止进程，而要判断非法进程的来源、作用和所在位置，从而把它彻底清除。</p><p>当然，如果服务器数量很少，我们完全可以人为通过进程管理命令来进行监控与干预，但如果服务器数量较多，那么人为手工监控就变得非常困难了，这时我们就需要相应的监控服务，如 cacti 或 nagios。总之，进程管理工作中最重要的工作就是判断服务器的健康状 态，最理想的状态是服务器宕机之前就解决问题，从而避免服务器的宕机。</p><p><strong>2) 查看系统中所有的进程</strong></p><p>我们需要查看看系统中所有正在运行的进程，通过这些进程可以判断系统中运行了哪些服务、是否有非法服务在运行。</p><p><strong>3) 杀死进程</strong></p><p>这是进程管理中最不常用的手段。当需要停止服务时，会通过正确关闭命令来停止服务（如 apache 服务可以通过 service httpd stop 命令来关闭）。只有在正确终止进程的手段失效的情况下，才会考虑使用 kill 命令杀死进程。</p><p>其实，进程管理和 Windows 中任务管理器的作用非常类似，不过大家在使用任务管理器时是为了杀死进程，而不是为了判断服务器的健康状态。</p><h2 id="_3-ps-查看当前系统进程状态" tabindex="-1"><a class="header-anchor" href="#_3-ps-查看当前系统进程状态"><span>3.ps 查看当前系统进程状态</span></a></h2><p>ps 命令是最常用的监控进程的命令，通过此命令可以查看系统中所有运行进程的详细信息。</p><p>ps 命令有多种不同的使用方法，这常常给初学者带来困惑。在各种 Linux 论坛上，询问 ps 命令语法的帖子屡见不鲜，而出现这样的情况，还要归咎于 UNIX 悠久的历史和庞大的派系。在不同的 Linux 发行版上，ps 命令的语法各不相同，为此，Linux 采取了一个折中的方法，即融合各种不同的风格，兼顾那些已经习惯了其它系统上使用 ps 命令的用户。</p><p>ps 命令的基本格式如下：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[root@localhost ~]# ps aux</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#查看系统中所有的进程</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[root@localhost ~]# ps -ef</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#可以查看子父进程之间的关系</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>选项：</p><ul><li>a：显示一个终端的所有进程，除会话引线外；</li><li>u：显示进程的归属用户及内存的使用情况；</li><li>x：显示没有控制终端的进程；</li><li>-l：长格式显示更加详细的信息；</li><li>-e：显示所有进程；</li><li>-f：显示完整格式的进程列表</li></ul><p>可以看到，ps 命令有些与众不同，它的部分选项不能加入&quot;-&quot;，比如命令&quot;ps aux&quot;，其中&quot;aux&quot;是选项，但是前面不能带“-”。</p><p>大家如果执行 &quot;man ps&quot; 命令，则会发现 ps 命令的帮助为了适应不同的类 UNIX 系统，可用格式非常多，不方便记忆。所以，我建议大家记忆几个固定选项即可。比如：</p><ul><li>&quot;ps aux&quot; 可以查看系统中所有的进程；</li><li>&quot;ps -ef&quot; 可以查看系统中所有的进程，而且还能看到进程的父进程的 PID 和进程优先级；</li><li>&quot;ps -l&quot; 只能看到当前 Shell 产生的进程；</li></ul><p>有这三个命令就足够了，下面分别来查看。</p><p>【例 1】</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[root@localhost ~]# ps aux</span></span>\n<span class="line"><span>#查看系统中所有的进程</span></span>\n<span class="line"><span>USER PID %CPU %MEM  VSZ  RSS   TTY STAT START TIME COMMAND</span></span>\n<span class="line"><span>root   1  0.0  0.2 2872 1416   ?   Ss   Jun04 0:02 /sbin/init</span></span>\n<span class="line"><span>root   2  0.0  0.0    0    0   ?    S   Jun04 0:00 [kthreadd]</span></span>\n<span class="line"><span>root   3  0.0  0.0    0    0   ?    S   Jun04 0:00 [migration/0]</span></span>\n<span class="line"><span>root   4  0.0  0.0    0    0   ?    S   Jun04 0:00 [ksoftirqd/0]</span></span>\n<span class="line"><span>…省略部分输出…</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上输出信息中各列的具体含义。</p><table><thead><tr><th>表头</th><th>含义</th></tr></thead><tbody><tr><td>USER</td><td>该进程是由哪个用户产生的。</td></tr><tr><td>PID</td><td>进程的 ID。</td></tr><tr><td>%CPU</td><td>该进程占用 CPU 资源的百分比，占用的百分比越高，进程越耗费资源。</td></tr><tr><td>%MEM</td><td>该进程占用物理内存的百分比，占用的百分比越高，进程越耗费资源。</td></tr><tr><td>VSZ</td><td>该进程占用虚拟内存的大小，单位为 KB。</td></tr><tr><td>RSS</td><td>该进程占用实际物理内存的大小，单位为 KB。</td></tr><tr><td>TTY</td><td>该进程是在哪个终端运行的。其中，tty1 ~ tty7 代表本地控制台终端（可以通过 Alt+F1 ~ F7 快捷键切换不同的终端），tty1~tty6 是本地的字符界面终端，tty7 是图形终端。pts/0 ~ 255 代表虚拟终端，一般是远程连接的终端，第一个远程连接占用 pts/0，第二个远程连接占用 pts/1，依次増长。</td></tr><tr><td>STAT</td><td>进程状态。常见的状态有以下几种：-D：不可被唤醒的睡眠状态，通常用于 I/O 情况。-R：该进程正在运行。-S：该进程处于睡眠状态，可被唤醒。-T：停止状态，可能是在后台暂停或进程处于除错状态。-W：内存交互状态（从 2.6 内核开始无效）。-X：死掉的进程（应该不会出现）。-Z：僵尸进程。进程已经中止，但是部分程序还在内存当中。-&lt;：高优先级（以下状态在 BSD 格式中出现）。-N：低优先级。-L：被锁入内存。-s：包含子进程。-l：多线程（小写 L）。-+：位于后台。</td></tr><tr><td>START</td><td>该进程的启动时间。</td></tr><tr><td>TIME</td><td>该进程占用 CPU 的运算时间，注意不是系统时间。</td></tr><tr><td>COMMAND</td><td>产生此进程的命令名。</td></tr></tbody></table><p>【例 2】&quot;ps aux&quot;命令可以看到系统中所有的进程，&quot;ps -ef&quot;命令也能看到系统中所有的进程。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[root@localhost ~]# ps -ef</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">F</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> UID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PPID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> C</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  PRI</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Nl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ADDR</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  SZ</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> WCHAN</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> TTY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      TIME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  CMD</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">4</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  80</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    718</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     ?</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:02</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  init</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  80</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     ?</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  kthreadd</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -40</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     ?</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  migration/0</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  80</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     ?</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  ksoflirqd/0</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   5</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -40</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     ?</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  migration/0</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">…省略部分输出…</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上输出信息中各列的含义。</p><table><thead><tr><th>表头</th><th>含义</th></tr></thead><tbody><tr><td>F</td><td>进程标志，说明进程的权限，常见的标志有两个: 1：进程可以被复制，但是不能被执行；4：进程使用超级用户权限；</td></tr><tr><td>S</td><td>进程状态。具体的状态和&quot;psaux&quot;命令中的 STAT 状态一致；</td></tr><tr><td>UID</td><td>运行此进程的用户的 ID；</td></tr><tr><td>PID</td><td>进程的 ID；</td></tr><tr><td>PPID</td><td>父进程的 ID；</td></tr><tr><td>C</td><td>该进程的 CPU 使用率，单位是百分比；</td></tr><tr><td>PRI</td><td>进程的优先级，数值越小，该进程的优先级越高，越早被 CPU 执行；</td></tr><tr><td>NI</td><td>进程的优先级，数值越小，该进程越早被执行；</td></tr><tr><td>ADDR</td><td>该进程在内存的哪个位置；</td></tr><tr><td>SZ</td><td>该进程占用多大内存；</td></tr><tr><td>WCHAN</td><td>该进程是否运行。&quot;-&quot;代表正在运行；</td></tr><tr><td>TTY</td><td>该进程由哪个终端产生；</td></tr><tr><td>TIME</td><td>该进程占用 CPU 的运算时间，注意不是系统时间；</td></tr><tr><td>CMD</td><td>产生此进程的命令名；</td></tr></tbody></table><p>【例 3】如果不想看到所有的进程，只想查看一下当前登录产生了哪些进程，那只需使用 &quot;ps -l&quot; 命令就足够了：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[root@localhost ~]# ps -l</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#查看当前登录产生的进程</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">F</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> UID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   PID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  PPID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> C</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PRI</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> NI</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ADDR</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> SZ</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> WCHAN</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> TTY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       TIME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CMD</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">4</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   18618</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 18614</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  80</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1681</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     pts/1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">4</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> R</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   18683</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 18618</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  80</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1619</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     pts/1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到，这次从 pts/1 虚拟终端登录，只产生了两个进程：一个是登录之后生成的 Shell，也就是 bash；另一个是正在执行的 ps 命令。</p><p>我们再来说说僵尸进程。僵尸进程的产生一般是由于进程非正常停止或程序编写错误，导致子进程先于父进程结束，而父进程又没有正确地回收子进程，从而造成子进程一直存在于内存当中，这就是僵尸进程。</p><p>僵尸进程会对主机的稳定性产生影响，所以，在产生僵尸进程后，一定要对产生僵尸进程的软件进行优化，避免一直产生僵尸进程；对于已经产生的僵尸进程，可以在查找出来之后强制中止。</p><h2 id="_4-kill-终止进程" tabindex="-1"><a class="header-anchor" href="#_4-kill-终止进程"><span>4.kill 终止进程</span></a></h2><h3 id="_4-1-kill-终止进程" tabindex="-1"><a class="header-anchor" href="#_4-1-kill-终止进程"><span>4.1 kill 终止进程</span></a></h3><p>kill 从字面来看，就是用来杀死进程的命令，但事实上，这个或多或少带有一定的误导性。从本质上讲，kill 命令只是用来向进程发送一个信号，至于这个信号是什么，是用户指定的。</p><p>也就是说，kill 命令的执行原理是这样的，kill 命令会向操作系统内核发送一个信号（多是终止信号）和目标进程的 PID，然后系统内核根据收到的信号类型，对指定进程进行相应的操作。</p><p>kill 命令的基本格式如下：</p><p><code>[root@localhost ~]# kill [信号] PID</code></p><p>kill 命令是按照 PID 来确定进程的，所以 kill 命令只能识别 PID，而不能识别进程名。Linux 定义了几十种不同类型的信号，读者可以使用 kill -l 命令查看所有信号及其编号，这里仅列出几个常用的信号。</p><table><thead><tr><th>信号编号</th><th>信号名</th><th>含义</th></tr></thead><tbody><tr><td>0</td><td>EXIT</td><td>程序退出时收到该信息。</td></tr><tr><td>1</td><td>HUP</td><td>挂掉电话线或终端连接的挂起信号，这个信号也会造成某些进程在没有终止的情况下重新初始化。</td></tr><tr><td>2</td><td>INT</td><td>表示结束进程，但并不是强制性的，常用的 &quot;Ctrl+C&quot; 组合键发出就是一个 kill -2 的信号。</td></tr><tr><td>3</td><td>QUIT</td><td>退出。</td></tr><tr><td>9</td><td>KILL</td><td>杀死进程，即强制结束进程。</td></tr><tr><td>11</td><td>SEGV</td><td>段错误。</td></tr><tr><td>15</td><td>TERM</td><td>正常结束进程，是 kill 命令的默认信号。</td></tr></tbody></table><p>需要注意的是，表中省略了各个信号名称的前缀 SIG，也就是说，SIGTERM 和 TERM 这两种写法都对，kill 命令都可以理解。</p><p>下面，我们举几个例子来说明一下 kill 命令。</p><p>【例 1】 标准 kill 命令。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[root@localhost ~]# kill 2248</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#杀死PID是2248的httpd进程，默认信号是15，正常停止</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#如果默认信号15不能杀死进程，则可以尝试-9信号，强制杀死进程</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>【例 2】使用“-1”信号，让进程重启。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[root@localhost ~]# kill -1 2246</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">使用“-1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (数字1)”信号，让httpd的主进程重新启动</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>学会如何使用 kill 命令之后，再思考一个问题，使用 kill 命令一定可以终止一个进程吗？</p><p>答案是否定的。文章开头说过，kill 命令只是“发送”一个信号，因此，只有当信号被程序成功“捕获”，系统才会执行 kill 命令指定的操作；反之，如果信号被“封锁”或者“忽略”，则 kill 命令将会失效。</p><h3 id="_4-2-killall-终止特定的一类进程" tabindex="-1"><a class="header-anchor" href="#_4-2-killall-终止特定的一类进程"><span>4.2 killall 终止特定的一类进程</span></a></h3><p>killall 也是用于关闭进程的一个命令，但和 kill 不同的是，killall 命令不再依靠 PID 来杀死单个进程，而是通过程序的进程名来杀死一类进程，也正是由于这一点，该命令常与 ps、pstree 等命令配合使用。</p><p>killall 命令的基本格式如下：</p><p><code>[root@localhost ~]# killall [选项] 进程名</code></p><p>注意，此命令的信号类型同 kill 命令一样，因此这里不再赘述，此命令常用的选项有如下 2 个：</p><ul><li>-i：交互式，询问是否要杀死某个进程；</li><li>-I：忽略进程名的大小写；</li></ul><p>接下来，给大家举几个例子。</p><p>【例 1】杀死 httpd 进程。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[root@localhost ~]# killall httpd</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#杀死所有进程名是httpd的进程</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[root@localhost ~]# ps aux | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;httpd&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;grep&quot;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#查询发现所有的httpd进程都消失了</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-pstree-查看进程树" tabindex="-1"><a class="header-anchor" href="#_5-pstree-查看进程树"><span>5.pstree 查看进程树</span></a></h2><p>pstree 命令是以树形结构显示程序和进程之间的关系，此命令的基本格式如下：</p><p><code>[root@localhost ~]# pstree [选项] [PID或用户名]</code></p><p>pstree 命令常用选项以及各自的含义。</p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-a</td><td>显示启动每个进程对应的完整指令，包括启动进程的路径、参数等。</td></tr><tr><td>-c</td><td>不使用精简法显示进程信息，即显示的进程中包含子进程和父进程。</td></tr><tr><td>-n</td><td>根据进程 PID 号来排序输出，默认是以程序名排序输出的。</td></tr><tr><td>-p</td><td>显示进程的 PID。</td></tr><tr><td>-u</td><td>显示进程对应的用户名称。</td></tr></tbody></table><p>需要注意的是，在使用 pstree 命令时，如果不指定进程的 PID 号，也不指定用户名称，则会以 init 进程为根进程，显示系统中所有程序和进程的信息；反之，若指定 PID 号或用户名，则将以 PID 或指定命令为根进程，显示 PID 或用户对应的所有程序和进程。</p><p>init 进程是系统启动的第一个进程，进程的 PID 是 1，也是系统中所有进程的父进程。 【例 1】</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[root@1ocalhost ~]# pstree</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">init──┬──abrc-dump-oopa</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──abrtd</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──acpid</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">..</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.省略部分输出.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">..</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──rayslogd───3[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">{rsyslogrd}</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">]</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#有3个rsyslogd进程存在</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──sshd───sshd───bash───pstree</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#Pstree命令进程是在远程连接中被执行的</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──udevd───2[udevd</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">└──xinecd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>【例 2】如果想知道某个用户都启动了哪些进程，使用 pstree 命令可以很容易实现，以 mysql 用户为例：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[root@1ocalhost ~]# pstree mysql</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mysqid---6*[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">{mysqid}</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>此输出结果显示了 mysql 用户对应的进程为 mysqid，并且 mysqid 进程拥有 5 个子进程（外加 1 个父进程，共计 6 个进程）。</p><h2 id="_6-top-实时监控系统进程状态" tabindex="-1"><a class="header-anchor" href="#_6-top-实时监控系统进程状态"><span>6.top 实时监控系统进程状态</span></a></h2><p>ps 命令可以一次性给出当前系统中进程状态，但使用此方式得到的信息缺乏时效性，并且，如果管理员需要实时监控进程运行情况，就必须不停地执行 ps 命令，这显然是缺乏效率的。</p><p>为此，Linux 提供了 top 命令。top 命令可以动态地持续监听进程地运行状态，与此同时，该命令还提供了一个交互界面，用户可以根据需要，人性化地定制自己的输出，进而更清楚地了进程的运行状态。</p><p>使用权限：所有使用者。</p><p>top 命令的基本格式如下：</p><p><code>[root@localhost ~]#top [选项]</code></p><p>选项：</p><ul><li>-d 秒数：指定 top 命令每隔几秒更新。默认是 3 秒；</li><li>-b：使用批处理模式输出。一般和&quot;-n&quot;选项合用，用于把 top 命令重定向到文件中；</li><li>-n 次数：指定 top 命令执行的次数。一般和&quot;-&quot;选项合用；</li><li>-p 进程PID：仅查看指定 ID 的进程；</li><li>-s：使 top 命令在安全模式中运行，避免在交互模式中出现错误；</li><li>-u 用户名：只监听某个用户的进程；</li></ul><p>在 top 命令的显示窗口中，还可以使用如下按键，进行一下交互操作：</p><ul><li>? 或 h：显示交互模式的帮助；</li><li>P：按照 CPU 的使用率排序，默认就是此选项；</li><li>M：按照内存的使用率排序；</li><li>N：按照 PID 排序；</li><li>T：按照 CPU 的累积运算时间排序，也就是按照 TIME+ 项排序；</li><li>k：按照 PID 给予某个进程一个信号。一般用于中止某个进程，信号 9 是强制中止的信号；</li><li>r：按照 PID 给某个进程重设优先级（Nice）值；</li><li>q：退出 top 命令；</li></ul><p>我们看看 top 命令的执行结果，如下：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[root@localhost ~]# top</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">top</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 12:26:46</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> up</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> day,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 13:32,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> users,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> load</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> average:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.00,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.00,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0.00</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Tasks:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 95</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> total,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> running,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 94</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sleeping,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stopped,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> zombie</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Cpu(s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">): 0.1%us, 0.1%sy, 0.0%ni, 99.7%id, 0.1%wa, 0.0%hi, 0.1%si, 0.0%st</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Mem:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 625344k</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> total,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 571504k</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> used,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 53840k</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> free,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 65800k</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> buffers</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Swap:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 524280k</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> total,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0k</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> used,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 524280k</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> free,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 409280k</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cached</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   USER</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PR</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> NI</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> VIRT</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  RES</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  SHR</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> %CPU</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> %MEM</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   TIME+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> COMMAND</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">19002</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2656</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1068</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  856</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> R</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0:01.87</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> top</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2872</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1416</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1200</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0:02.55</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0:00.03</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kthreadd</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> RT</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0:00.00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> migration/0</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">4</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0:00.15</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ksoftirqd/0</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">5</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> RT</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0:00.00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> migration/0</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">6</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> RT</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0:10.01</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> watchdog/0</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">7</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0:05.01</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> events/0</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">8</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0:00.00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cgroup</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">9</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0:00.00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> khelper</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">10</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0:00.00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> netns</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">11</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0:00.00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> async/mgr</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">12</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0:00.00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pm</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">13</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0:01.70</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sync_supers</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">14</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0:00.63</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bdi-default</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">15</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0:00.00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kintegrityd/0</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">16</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0:02.52</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kblockd/0</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">17</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0:00.00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kacpid</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">18</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0:00.00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kacpi_notify</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们解释一下命令的输出。top 命令的输出内容是动态的，默认每隔 3 秒刷新一次。命令的输出主要分为两部分：</p><ol><li>第一部分是前五行，显示的是整个系统的资源使用状况，我们就是通过这些输出来判断服务器的资源使用状态的；</li><li>第二部分从第六行开始，显示的是系统中进程的信息；</li></ol><p>我们先来说明第一部分的作用。</p><ul><li><p>第一行为任务队列信息。</p><table><thead><tr><th>内 容</th><th>说 明</th></tr></thead><tbody><tr><td>12:26:46</td><td>系统当前时间</td></tr><tr><td>up 1 day, 13:32</td><td>系统的运行时间.本机己经运行 1 天 13 小时 32 分钟</td></tr><tr><td>2 users</td><td>当前登录了两个用户</td></tr><tr><td>load average: 0.00,0.00，0.00</td><td>系统在之前 1 分钟、5 分钟、15 分钟的平均负载。如果 CPU 是单核的，则这个数值超过 1 就是高负载：如果 CPU 是四核的，则这个数值超过 4 就是高负载 （这个平均负载完全是依据个人经验来进行判断的，一般认为不应该超过服务器 CPU 的核数）</td></tr></tbody></table></li><li><p>第二行为进程信息。</p><table><thead><tr><th>内 容</th><th>说 明</th></tr></thead><tbody><tr><td>Tasks: 95 total</td><td>系统中的进程总数</td></tr><tr><td>1 running</td><td>正在运行的进程数</td></tr><tr><td>94 sleeping</td><td>睡眠的进程数</td></tr><tr><td>0 stopped</td><td>正在停止的进程数</td></tr><tr><td>0 zombie</td><td>僵尸进程数。如果不是 0，则需要手工检查僵尸进程</td></tr></tbody></table></li><li><p>第三行为 CPU 信息。</p><table><thead><tr><th>内 容</th><th>说 明</th></tr></thead><tbody><tr><td>Cpu(s): 0.1 %us</td><td>用户模式占用的 CPU 百分比</td></tr><tr><td>0.1%sy</td><td>系统模式占用的 CPU 百分比</td></tr><tr><td>0.0%ni</td><td>改变过优先级的用户进程占用的 CPU 百分比</td></tr><tr><td>99.7%id</td><td>空闲 CPU 占用的 CPU 百分比</td></tr><tr><td>0.1%wa</td><td>等待输入/输出的进程占用的 CPU 百分比</td></tr><tr><td>0.0%hi</td><td>硬中断请求服务占用的 CPU 百分比</td></tr><tr><td>0.1%si</td><td>软中断请求服务占用的 CPU 百分比</td></tr><tr><td>0.0%st</td><td>st（steal time）意为虚拟时间百分比，就是当有虚拟机时，虚拟 CPU 等待实际 CPU 的时间百分比</td></tr></tbody></table></li><li><p>第四行为物理内存信息。</p><table><thead><tr><th>内 容</th><th>说 明</th></tr></thead><tbody><tr><td>Mem: 625344k total</td><td>物理内存的总量，单位为KB</td></tr><tr><td>571504k used</td><td>己经使用的物理内存数量</td></tr><tr><td>53840k&amp;ee</td><td>空闲的物理内存数量。我们使用的是虚拟机，共分配了 628MB内存，所以只有53MB的空闲内存</td></tr><tr><td>65800k buffers</td><td>作为缓冲的内存数量</td></tr></tbody></table></li><li><p>第五行为交换分区（swap）信息。</p><table><thead><tr><th>内 容</th><th>说 明</th></tr></thead><tbody><tr><td>Swap: 524280k total</td><td>交换分区（虚拟内存）的总大小</td></tr><tr><td>Ok used</td><td>已经使用的交换分区的大小</td></tr><tr><td>524280k free</td><td>空闲交换分区的大小</td></tr><tr><td>409280k cached</td><td>作为缓存的交换分区的大小</td></tr></tbody></table></li></ul><p>我们通过 top 命令的第一部分就可以判断服务器的健康状态。如果 1 分钟、5 分钟、15 分钟的平均负载高于 1，则证明系统压力较大。如果 CPU 的使用率过高或空闲率过低，则证明系统压力较大。如果物理内存的空闲内存过小，则也证明系统压力较大。</p><p>这时，我们就应该判断是什么进程占用了系统资源。如果是不必要的进程，就应该结束这些进程；如果是必需进程，那么我们该増加服务器资源（比如増加虚拟机内存），或者建立集群服务器。</p><p>我们还要解释一下缓冲（buffer）和缓存（cache）的区别：</p><ul><li>缓存（cache）是在读取硬盘中的数据时，把最常用的数据保存在内存的缓存区中，再次读取该数据时，就不去硬盘中读取了，而在缓存中读取。</li><li>缓冲（buffer）是在向硬盘写入数据时，先把数据放入缓冲区,然后再一起向硬盘写入，把分散的写操作集中进行，减少磁盘碎片和硬盘的反复寻道，从而提高系统性能。</li></ul><p>简单来说，缓存（cache）是用来加速数据从硬盘中&quot;读取&quot;的，而缓冲（buffer）是用来加速数据&quot;写入&quot;硬盘的。</p><p>再来看 top 命令的第二部分输出，主要是系统进程信息，各个字段的含义如下：</p><ul><li>PID：进程的 ID。</li><li>USER：该进程所属的用户。</li><li>PR：优先级，数值越小优先级越高。</li><li>NI：优先级，数值越小、优先级越高。</li><li>VIRT：该进程使用的虚拟内存的大小，单位为 KB。</li><li>RES：该进程使用的物理内存的大小，单位为 KB。</li><li>SHR：共享内存大小，单位为 KB。</li><li>S：进程状态。</li><li>%CPU：该进程占用 CPU 的百分比。</li><li>%MEM：该进程占用内存的百分比。</li><li>TIME+：该进程共占用的 CPU 时间。</li><li>COMMAND：进程的命令名。</li></ul><p>这部分和 ps 命令的输出比较类似，只是如果在终端执行 top 命令，则不能看到所有的进程，而只能看到占比靠前的进程。接下来我们举几个 top 命令常用的实例。</p><p>【例 1】如果只想让 top 命令查看某个进程，就可以使用 &quot;-p 选项&quot;。命令如下：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[root@localhost ~]# top -p 15273</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#只查看 PID为 15273的apache进程</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">top</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 14:28:47</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> up</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> day,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 15:34,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> users,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> load</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> average:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.00,0.00,0.00</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Tasks:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> total,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> running,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sleeping,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stopped,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> zombie</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Cpu(s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">): 0.0%us, 0.0%sy, 0.0%ni,100.0%id, 0.0%wa, 0.0%hi, 0.0%si, 0.0%st</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Mem:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 625344k</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> total,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 574124k</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> used,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 51220k</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> free,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 67024k</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> buffers</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Swap:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 524280k</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> total,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Ok</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> used,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 524280k</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> free,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 409344k</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cached</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     USER</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PR</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> NI</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> VIRT</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  RES</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> SHR</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> %CPU</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> %MEM</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  TIME+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  COMMAND</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">15273</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> daemon</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  4520</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1192</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 580</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0.2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0:00.00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   httpd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-netstat-显示网络状态和端口占用信息" tabindex="-1"><a class="header-anchor" href="#_7-netstat-显示网络状态和端口占用信息"><span>7.netstat 显示网络状态和端口占用信息</span></a></h2><p><strong>1）基本语法</strong></p><p><code>netstat -anp | grep 进程号 （功能描述：查看该进程网络信息） </code></p><p><code>netstat –nlp | grep 端口号 （功能描述：查看网络端口号占用情况</code></p><p><strong>2）选项说明</strong></p><ul><li><p>-a 显示所有正在监听（listen）和未监听的套接字（socket）</p></li><li><p>-n 拒绝显示别名，能显示数字的全部转化成数字</p></li><li><p>-l 仅列出在监听的服务状态</p></li><li><p>-p 表示显示哪个进程在调用</p></li></ul><p><strong>3）案例实操</strong></p><p>（1）通过进程号查看sshd进程的网络信息</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[root@hadoop101 hadoop-2.7.2]# netstat -anp | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sshd</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tcp</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.0.0.0:22</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.0.0.0:</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> LISTEN</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">951/sshd</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tcp</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 192.168.202.100:22</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 192.168.202.1:57741</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ESTABLISHED</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 3380/sshd:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root@pts</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tcp</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 52</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 192.168.202.100:22</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 192.168.202.1:57783</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ESTABLISHED</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 3568/sshd:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root@pts</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tcp</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 192.168.202.100:22</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 192.168.202.1:57679</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ESTABLISHED</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 3142/sshd:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root@pts</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tcp6</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> :::22</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> :::</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> LISTEN</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">951/sshd</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">unix</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> DGRAM</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 39574</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 3568/sshd:</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">root@pts</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">unix</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> DGRAM</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 37452</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 3142/sshd:</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">root@pts</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">unix</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> DGRAM</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 48651</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 3380/sshd:</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">root@pts</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">unix</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> STREAM</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CONNECTED</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 21224</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 951/sshd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）查看某端口号是否被占用</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[root@hadoop101 桌面]# netstat -nltp | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 22</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tcp</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 192.168.122.1:53</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.0.0.0:</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> LISTEN</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1324/dnsmasq</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tcp</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.0.0.0:22</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.0.0.0:</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> LISTEN</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">951/sshd</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tcp6</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> :::22</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> :::</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> LISTEN</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">951/sshd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',121)]))}]]),n=JSON.parse('{"path":"/back_end/linux/10.html","title":"10 【实操篇-进程管理类】","lang":"zh-CN","frontmatter":{"description":"10 【实操篇-进程管理类】 无论是 Linux 系统管理员还是普通用户，监视系统进程的运行情况并适时终止一些失控的进程，是每天的例行事务。和 Linux 系统相比，进程管理在 Windows 中更加直观，它主要是使用\\"任务管理器\\"来进行进程管理的。 通常，使用\\"任务管理器\\"主要有 3 个目的： 利用\\"应用程序\\"和\\"进程\\"标签来査看系统中到底运行了哪些...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/newblog/back_end/linux/10.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"10 【实操篇-进程管理类】"}],["meta",{"property":"og:description","content":"10 【实操篇-进程管理类】 无论是 Linux 系统管理员还是普通用户，监视系统进程的运行情况并适时终止一些失控的进程，是每天的例行事务。和 Linux 系统相比，进程管理在 Windows 中更加直观，它主要是使用\\"任务管理器\\"来进行进程管理的。 通常，使用\\"任务管理器\\"主要有 3 个目的： 利用\\"应用程序\\"和\\"进程\\"标签来査看系统中到底运行了哪些..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-02T07:29:48.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-02T07:29:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"10 【实操篇-进程管理类】\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-02T07:29:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"1.什么是进程和程序","slug":"_1-什么是进程和程序","link":"#_1-什么是进程和程序","children":[]},{"level":2,"title":"2.进程管理的作用","slug":"_2-进程管理的作用","link":"#_2-进程管理的作用","children":[]},{"level":2,"title":"3.ps 查看当前系统进程状态","slug":"_3-ps-查看当前系统进程状态","link":"#_3-ps-查看当前系统进程状态","children":[]},{"level":2,"title":"4.kill 终止进程","slug":"_4-kill-终止进程","link":"#_4-kill-终止进程","children":[{"level":3,"title":"4.1 kill 终止进程","slug":"_4-1-kill-终止进程","link":"#_4-1-kill-终止进程","children":[]},{"level":3,"title":"4.2  killall 终止特定的一类进程","slug":"_4-2-killall-终止特定的一类进程","link":"#_4-2-killall-终止特定的一类进程","children":[]}]},{"level":2,"title":"5.pstree 查看进程树","slug":"_5-pstree-查看进程树","link":"#_5-pstree-查看进程树","children":[]},{"level":2,"title":"6.top 实时监控系统进程状态","slug":"_6-top-实时监控系统进程状态","link":"#_6-top-实时监控系统进程状态","children":[]},{"level":2,"title":"7.netstat 显示网络状态和端口占用信息","slug":"_7-netstat-显示网络状态和端口占用信息","link":"#_7-netstat-显示网络状态和端口占用信息","children":[]}],"git":{"createdTime":1733124588000,"updatedTime":1733124588000,"contributors":[{"name":"liubin","email":"liubin8919@qq.com","commits":1}]},"readingTime":{"minutes":23.34,"words":7002},"filePathRelative":"back_end/linux/10.md","localizedDate":"2024年12月2日","excerpt":"\\n<p>无论是 Linux 系统管理员还是普通用户，监视系统进程的运行情况并适时终止一些失控的进程，是每天的例行事务。和 Linux 系统相比，进程管理在 Windows 中更加直观，它主要是使用\\"任务管理器\\"来进行进程管理的。</p>\\n<p>通常，使用\\"任务管理器\\"主要有 3 个目的：</p>\\n<ol>\\n<li>利用\\"应用程序\\"和\\"进程\\"标签来査看系统中到底运行了哪些程序和进程；</li>\\n<li>利用\\"性能\\"和\\"用户\\"标签来判断服务器的健康状态；</li>\\n<li>在\\"应用程序\\"和\\"进程\\"标签中强制中止任务和进程；</li>\\n</ol>\\n<p>Linux 中虽然使用命令进行进程管理，但是进程管理的主要目的是一样的，即查看系统中运行的程序和进程、判断服务器的健康状态和强制中止不需要的进程。</p>","autoDesc":true}')}}]);